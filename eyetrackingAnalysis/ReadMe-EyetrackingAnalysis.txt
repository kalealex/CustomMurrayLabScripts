Eyetracking Analysis Pipeline


For GABA in ASD fMRI:

(1) Make sure that all .edfs (eyetracking data files) have been converted to .asc format (a delimitted format for which I have written parsing functions) using the EDF2ASC converter software provided by SR Research. These files will be inside the subfolder named log_files within each subject's folder in the directory L:\MurrayLab\ASD\Data. Just a heads up, this conversion process will take some time, probably about two minutes per file.
(2) All the fMRI data for the subjects whose data you would like to process must be analyzed in Brain Voyager, resulting in subfolders named set1, set2, set3, etc. I know it seems kind of odd that the eyetracking analysis depends on the fMRI analysis, but the mapping between each set number (i.e., set*; G101_*.asc) and a given fMRI experiment (i.e., MT_localizer, Contrast, Suppression, Summation, ftap, etc.) is maintained in the form of linked .prt files which are generated in the Brain Voyager analysis, otherwise we cannot automate the retrieval of which eyetracking files go with each scan type.
(3) Once all .edfs of interest have been converted and all the relevant fMRI data has been processed, run the script makeEyetrackingQualityTable_GABAinASD.m one section at a time. The header of this script gives detailed instructions about how to used each section of the script to create a table detailing information needed to further process summary statistics for eyetracking in fMRI for the GABA in ASD experiment. This table, saved at L:\MurrayLab\ASD\Data\EyetrackingQuality.mat, gives the following information about each individual .asc file: subject code (i.e., G101), session (i.e., fMRI1), set (i.e., set1), ascfile (i.e., G101_1.asc), logfile (i.e., G101_1-ssMotion_MTlocalizer.log; this is the behavioral data file that accompanies the eyetracking data), isData (is this file even worth parsing, or is it just noise?), isGoodData (was the eyetracker successfully calibrated?). The last two columns of this table must be filled in manually based on the notes were taken during each scan. There should be one of these notes .txt files for each subject named with the subject code and stored inside of each individual subject's folder at L:\MurrayLab\ASD\Data. Make sure you update the variable dqSubjects to include the an up-to-date list subject who have been disqualified (looking at dqSubjects in the most recent version of EyetrackingQuality.mat will be helpful).
(4) [optional but recommended] Run the script Analyze_All_fMRI_EyeTracking_Data_GABAinASD.m which will parse all the .asc files for which the isData field of the EyetrackingQualityTable is true. When these files are parsed by the function AK_GABAinASD_ascfileParse.m, a .mat file with the same file name is created which contains a formatted table of raw data with blinks, saccades and stimulus events flagged. These parsed .mat files are, in turn, used to generate a structure containing summary statistics for each subject; this work is done in the function AK_GABAinASD_fMRI_EvaluateFixation.m. These structures of summary statistics are saved in the directory for each individual subject at L:\MurrayLab\ASD\Data with the naming convention: [subjectCode]_fMRI_EyeTracking_Data.mat. Everything done in this step can be done concurrently with the following step, but be advised that this step, which is the bulk of the data processing, will take a long time. On my computer it takes about 5 minutes per file which, at 21 files in a full data set for an individual subject, can really add up. Consider leaving your computer over night or even over the weekend to run this analysis, otherwise consider running this analysis on a server somewhere on campus.
(5) Run the script Create_fMRI_EyeTracking_Data_Table_GABAinASD.m. If you have already run Analyze_All_fMRI_EyeTracking_Data_GABAinASD.m (see step 4), this should not take long at all; if you skipped step 4, this will take a while (see step 4 for details). This script wraps all the subjects from the EyetrackingQualityTable through the data analysis described in step 4 or loads the structures of summary statistics created in step 4 if they already exist. Summary statistics for each scan and each subject are organized into a table which is saved as a .xlsx file at the directory L:\MurrayLab\DataTablesForGUI with the name fMRI_EyeTracking_Data_Tables*.xlsx. You will want to run this script twice, once with the switch at the top of the script called onlyGood set to false and once with the same switch set to true. This will result in two different versions of the eyetracking data tables file: fMRI_EyeTracking_Data_Tables.xlsx and fMRI_EyeTracking_Data_Tables_OnlyGood.xlsx. As is suggested by the file names, one of these files contains all the eyetracking data that is considered good enough to parse (in the EyetrackingQualityTable isData == true), and the other file contains only the eyetracking data for which the eyetracker could be calibrated and good quality data was attained (in the EyetrackingQualityTable isData == true && isGoodData == true). The tables created by this script can be read by the GUI for visualizing eyetracking data (see next step).
(6) Now that you have formatted tables of eyetracking summary statistics, you can read them, plot, explore, and export these summary statistics using a single tool: the function AK_GABAinASD_EyeTrackingFiguresGUI.m. Start by running the function. This will immediately bring up a UI window for selecting a data table file to load; select the file from which you'd like to visualize summary statistics. Next you will be looking at a blank figure with UI buttons down the left side of the figure window. Click the Experiments button and choose one or more experiments for which to explore data, realizing that experiments with non-overlapping subjects can not be visualized at the same time. Next click the Statistics button and select the statistics you are interested in plotting. For each statistic, a separate subplot will appear, and within each subplot there will be a cloud of points, each point representing an individual scan (or an individual block of a scan in the case that you selected an experiment with the prefix "block") and each cloud of points representing a condition in one of the experiments selected. Each cloud of dots gets its own mean and standard deviation. These plots rely heavily on mouseover labels. As you move your cursor over a cloud of dots the experiment and condition name for that cloud will appear below the x-axis; as you move your cursor over individual points a text box will pop up providing information about subject: session: set/run: block (if these are relevant to your selections). The GUI allows further customization of these plots, allowing you to group participants such that there are two clouds of points for each condition (one per group i.e., ASD vs NT). There is also the option to select a subset of conditions from the experiment selected using the Conditions UI button and to select a subset of subjects from the experiment selected using the Subjects UI button. Additionally, you can filter the data you are looking at so that points that meet a certain criteria will be plotted in a different color (use the Filters UI button to initiate filter selection). For example, if you choose to filter by subjects, points belonging to the selected subset of subjects in the Filter UI menu will appear in a different color from the rest of the subject. You might choose to do this if you are concerned about a particular subject's data across scans and want to see if their fixation behavior is consistently poor. You also have the option to filter points based on another summary statistic, such that points from a scan which meets a given criterion on a given summary statistic will appear in a different color. For example, you might select a filter that plots points in a different color if blink/saccade time was greater than 20% of the data for a scan. You might choose to do this to investigate the relationship between different summary statistics. Lastly, you can export the data corresponding to your current selections by clicking the Export UI button and selecting a directory and file name for the exported data. Note that exported data files will contain a matrix called exportData and a key detailing how metadata variables map onto the dimensions of the exportData matrix. This will enable you to look at, organize, and futher manipulate these summary statistics, say for the purpose of statistical inference, once a given selection has piqued your interest.